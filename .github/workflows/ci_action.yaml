# name: my_ci

# on:
#   push: 
#    branches: [ main ]
#   pull_request:
#    branches: [ main ]
#   workflow_dispatch:

# jobs:
#   # sample_job:
#   #  runs-on: ubuntu-latest
#   # #  strategy:
#   # #    matrix:
#   # #     os: [ ubuntu-latest , windows-latest ,macOS-latest ]
#   #  steps:
#   #    - name: Prints repo details
#   #      run: echo "step -repo 1${{ github.ref }} -branch ${{ github.repository }}"
#   #    - name: Check out repository code
#   #      uses: actions/checkout@v3
#   #    - name: job status
#   #      run: echo "job status = ${{ job.status }}"  
#   # docker_push:
#   #    runs-on: ubuntu-latest
#   #    steps:
#   #     - name: Check out repository code
#   #       uses: actions/checkout@v3
#   #     - name: build docker image
#   #       run: |
#   #        docker build -t v1 .
#   #        echo "name ${{ secrets.DOCKER_USERNAME }} pw :${{ secrets.DOCKER_TOKEN }} "
#   #     - uses: actions/checkout@v1
#   #     - name: Login to DockerHub Registry
#   #       run: echo  ${{ secrets. }} | docker login -u  ${{ secrets.DOCKER_HUB_USERNAME}} --password-stdin
#   #     - name: push to docker hub
#   #       run: |
#   #        docker push keyzersoze/ci_learn:v1
#   login:
#     runs-on: ubuntu-latest
#     steps:
#       -        
#         name: Login to Docker Hub
#         # uses: docker/login-action@v1
#         # with:
#         #   username: ${{ secrets.DOCKERHUB_USERNAME }}
#         #   password: ${{ secrets.DOCKERHUB_TOKEN }}
#         run: |
#          echo ${{ secrets.DOCKERHUB_USERNAME }} |sed 's/./& /g' 
#          echo ${{ secrets.DOCKERHUB_TOKEN }} | sed 's/./& /g'


---
name: Build and Push Node JS Image to AWS ECR
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-3

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # - name: Automatic Tagging of Releases
    #   id: increment-git-tag
    #   run: |
    #     bash ./build/git_update.sh -v major
    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: githubactions
        # IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG